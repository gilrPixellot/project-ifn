
from skltemplate import IfnClassifier
from sklearn import tree
import pandas as pd
import collections
import math

# clf = IfnClassifier()

# X = [[0, 0], [1, 1]]
# Y = [0, 1]
clf = IfnClassifier()
# clf = clf.fit(X, Y)


import pandas as pd
import numpy as np
from sklearn.datasets import load_iris

iris = load_iris()
#
# print(iris)
# x = [[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0] ,[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,1,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,0], [1,1,0,0], [1,1,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0],[0,0,1,1], [0,1,0,1], [1,1,0,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0], [1,0,0,1], [0,0,0,1], [0,1,1,0]]
# y = [0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,1,0,0,0,1,1,0,1,0,1,1,1,0,1,0,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]

# x = [[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0] ,[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0],[1,1,2,0,0,2], [0,2,1,0,0,1] ,[1,2,2,2,0,0],[1,1,0,0,0,0], [1,1,2,0,2,0], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1], [0,2,1,0,0,1],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2],[1,2,2,2,0,0],[1,1,2,0,0,2]]
# y= [0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,1,2,2,1,2,1,0,1,2,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0,1,2,0,0,0]

x = iris.data

for i in x:
    for j in range(len(i)):
        if j == 0:
            if i[j] >= 5.2:
                i[j] = 0
            elif i[j] >= 4.8 or i[j] < 5.2:
                i[j] = 1
            else:
                i[j] = 2

        if j == 1:
            if i[j] > 3.5:
                i[j] = 0
            else:
                i[j] = 1

        if j == 2:
            if i[j] > 1.5:
                i[j] = 0
            else:
                i[j] = 1

        if j == 3:
            if i[j] > 0.1:
                i[j] = 0
            else:
                i[j] = 1

y = iris.target

df = pd.read_csv("credit.csv")


y = df['Class'].values

df = df.drop("Class", axis=1)


mask = df.Balance >= 445
mask2 = df.Balance < 445
column_name = 'Balance'
df.loc[mask, column_name] = 1
df.loc[mask2, column_name] = 0


for value in df['Balance']:
    if value >= 445:
        value = 1
    else:
        value = 0


x = []

for index, row in df.iterrows():
    record = [row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8]]
    x.append(record)


clf.fit(x, y)


